// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PalettaPolizeiPro.Database;

#nullable disable

namespace PalettaPolizeiPro.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PalettaPolizeiPro.Data.EKS.Eks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("KeyId")
                        .HasColumnType("text");

                    b.Property<string>("WorkerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Eks");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.CheckEventArgs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<long>("StationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("StationId");

                    b.ToTable("CheckEvents");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.EksEventArgs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("EksKeyId")
                        .HasColumnType("text");

                    b.Property<string>("EksWorkerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<long>("StationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("EksEvents");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.QueryEventArgs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long>("StationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("StationId");

                    b.ToTable("QueryEvents");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("EndSortTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FinishedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InfoText")
                        .HasColumnType("text");

                    b.Property<long>("MaximumSort")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ScheduledTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("StartSortTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.OrderPalettaFinished", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PalettaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PalettaId");

                    b.ToTable("OrderPalettaFinishes");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.OrderPalettaScheduled", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PalettaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PalettaId");

                    b.ToTable("OrderPalettaSchedules");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.Paletta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<bool>("IsOut")
                        .HasColumnType("boolean");

                    b.Property<int>("Loop")
                        .HasColumnType("integer");

                    b.Property<bool>("Marked")
                        .HasColumnType("boolean");

                    b.Property<bool>("PalettaError")
                        .HasColumnType("boolean");

                    b.Property<bool>("ServiceFlag")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Palettas");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.PalettaProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ActualCycle")
                        .HasColumnType("integer");

                    b.Property<string>("EngineNumber")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PalettaId")
                        .HasColumnType("bigint");

                    b.Property<int>("PredefiniedCycle")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReadTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PalettaId");

                    b.ToTable("PalettaProperties");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.QueryState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte?>("ControlFlag")
                        .HasColumnType("smallint");

                    b.Property<byte?>("OperationStatus")
                        .HasColumnType("smallint");

                    b.Property<long?>("PalettaId")
                        .HasColumnType("bigint");

                    b.Property<string>("PalettaName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PalettaId");

                    b.ToTable("QueryStates");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.ServerNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ServerNotifications");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Stations.Station", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("DB")
                        .HasColumnType("integer");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsStationOn")
                        .HasColumnType("boolean");

                    b.Property<int>("Loop")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rack")
                        .HasColumnType("integer");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<string>("StationPcIp")
                        .HasColumnType("text");

                    b.Property<int>("StationType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("EksId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EksId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.CheckEventArgs", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.PalettaProperty", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PalettaPolizeiPro.Data.Stations.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.EksEventArgs", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Stations.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.LineEvents.QueryEventArgs", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.QueryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PalettaPolizeiPro.Data.Stations.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.Order", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.OrderPalettaFinished", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Order", "Order")
                        .WithMany("OrderPalettaFinishes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Paletta", "Paletta")
                        .WithMany("OrderPalettaFinishes")
                        .HasForeignKey("PalettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Paletta");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.OrderPalettaScheduled", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Order", "Order")
                        .WithMany("OrderPalettaSchedules")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Paletta", "Paletta")
                        .WithMany("OrderPalettaSchedules")
                        .HasForeignKey("PalettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Paletta");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.PalettaProperty", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Paletta", "Paletta")
                        .WithMany("Properties")
                        .HasForeignKey("PalettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paletta");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.QueryState", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.Palettas.Paletta", "Paletta")
                        .WithMany()
                        .HasForeignKey("PalettaId");

                    b.Navigation("Paletta");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Users.User", b =>
                {
                    b.HasOne("PalettaPolizeiPro.Data.EKS.Eks", "Eks")
                        .WithOne("User")
                        .HasForeignKey("PalettaPolizeiPro.Data.Users.User", "EksId");

                    b.Navigation("Eks");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.EKS.Eks", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.Order", b =>
                {
                    b.Navigation("OrderPalettaFinishes");

                    b.Navigation("OrderPalettaSchedules");
                });

            modelBuilder.Entity("PalettaPolizeiPro.Data.Palettas.Paletta", b =>
                {
                    b.Navigation("OrderPalettaFinishes");

                    b.Navigation("OrderPalettaSchedules");

                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
